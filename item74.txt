ITEM 74: DOCUMENT ALL EXCEPTIONS THROWN BY EACH METHOD

metodus altal dobott exck leirasa fontos resze a metodus megfelelo hasznt bizt docnak. ezert kritikus h a metodus altal dobott minden exct ledocoljunk (item 56)

mindig dekl egyenkent a checked exckat es docoljuk precizen a conditionokat amelyek mellett dobodhatnak, a Javadod @throws tag segitsegevel. ne akarjunk roviditeni azzal h a metodus vmilyen exc superclasst dob. extrem peldakent, sose dekl olyat h egy public metodus throws Exception v ami meg rosszabb throws Throwable. azon kivul h ez igy semmi infot nem nyujt a metodus hasznalojanak a tenylegesen dobhato exckrol, ez maganak a metodusnak a hasznalhatosagat is jelentosen csokk hiszen lenyegeben elfed minden mas exct ami dobodhat. egy kivetel azalol a main() metodus amelynel safely lehet throws Exceptiont dekl, mert csak a VM hivja

nyelv nem kivanja meg a metodus altal dobhato unchecked exck dekljat, javasolt epp olyan alaposan docolni oket mint a checked exckat. unchecked exck alt prgozasi hibakat repr (item 70), es ha prgozok tudomasara hozzuk az elkovetheto hibakat, azzal segitunk az elkerulesukben. metodus altal dobhato unchecked exck egy jol ledocolt listaja lenyegeben a sikeres execution precondjait irja le. lenyeges h minden public metodus docja leirja a precondjait (item 56), es az unchecked exck ledocolasa a legjobb mod ennek a teljesitesere

kulonosen fontos h az ifacekben levo metodusok ledocoljak az altaluk dobhato unchecked exckat. a doc az iface general contractjanak reszet jelenti, es lehetove teszi az iface klf impljai szamara a common behavot

haszn a Javadoc @throws taget a metodus altal dobhato minden exc ledocolasara, de ne haszn a throws keywordot unchecked exckra. fontos h az APInkat haszn prgozok tudjak h mely exck checkedek es melyek uncheckedek, mivel a prgozok felelossege mas a ket esetben. Javadoc @throws tag altal generalt doc, kapcsolodo throws clause nelkul a metodus deklban, eros utalas a prgozok szamara h az exc unchecked

meg kell jegyezni h ledocolni minden unchecked exct amit a metodusok dobhatnak, egy idealis de nem mindig elerheto cel a valosagban. amikor egy classt reviselnek, akkor nem a src v binary compat megsertese, ha egy exported metodust ugy modositanak h tovabbi unchecked exckat is dobhat. tfh egy class invokol egy metodust egy masik, fgtl megirt classbol. az elobbi class szerzoi lehet h alaposan ledocoltak minden unchecked exct amit a metodusok dobhatnak, de ha az utobbi classt reviselik h tovabbi unchecked exckat dobjon, akkor valoszinu h az elobbi class (amit nem reviseltek) propagalni fogja az uj unchecked exckat, bar nem docolja le oket

ha egy class szamos metodusa dobja uazt az exct uabbol az okbol, akkor azt docolhatjuk a class doc commentjeben, nem kell minden metodusnal kulon docolni. jo pelda NPE. class doc commentbe nyugodtan kerulhet "All methods in this class throw a NullPointerException if a null object reference is passed in any parameter" v hasonlo

summary: docoljunk minden exct amit az altalunk irt metodusok dobhatnak. ez von unchecked es checked exckra is, es abstract es concrete metodusokra is. ez a docolas a @throws taggel tortenjen a doc commentekben. dekl minden checked exck kulon a metodus a throws clauseban, de ne dekl az unchecked exckat. ha nem docoljuk le az exckat amiket a metodusaink dobhatnak, akkor nehez v lehetetlen lesz masok szamara hatekonyan haszn a classainkat es ifaceinket