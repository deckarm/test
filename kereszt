A design pattern temat en ket reszre valasztanam, az egyik az alap OO patternek, a masik pedig az architectural/enterprise patternek

Az OO patternek azok a klasszikus GOF patternek, ezekrol van egy konyvtarnyi irodalom. A GOF szerzok altal irt eredeti konyvet nem javaslom, az meg C++-ra keszult, jo viszont szerintem Elisabeth Freeman, Kathy Sierra: Head First Design Patterns, ez eleg jopofa stilusban, jol megjegyezhetoen mutatja be a temat. Az egyes patternek relevanciajat tekintve ugyan nem biztos hogy igazuk van, kb. az egyharmadukat ugyanis az utolso fejezetbe szamuztek "leftover patterns" cimmel, koztuk olyanokat is mint pl. a builder, de ettol eltekintve szerintem kivalo konyv, szemleletes peldak vannak benne mondjuk az interjukon eloszeretettel feltett "mi a kulonbseg az X es Y patternek kozott" kerdeskorben (state vs strategy, factory valtozatok stb.) 
Gyakori kerdes szokott meg lenni 
- mire jo az XY pattern? => Itt jol veszi ki magat ha a valasz elso mondata az adott patternre vonatkozo konzerv szoveg, pl. "in factory pattern, we create object without exposing the creation logic to the client and refer to newly created object using a common interface", aztan utana lehet szovegelni a reszletekrol. Ezt azert javaslom, mert sokszor elofordul az, hogy az ember egyebkent tudja a patternt, csak nem tudja megfeleloen elkezdeni a valaszt, es ettol belezavarodik az egeszbe
- mondj peldat GOF patternekre a JDK/Java EE librarykbol => ld. https://stackoverflow.com/questions/1673841/examples-of-gof-design-patterns-in-javas-core-libraries
- singleton kulonbozo valtozatai roviden, bar ehhez mar nagyon elvetemult vizsgaztatonak kell lenni
- pontos statisztikaim ugyan nincsenek, de ugy tunik, hogy a visitort valami miatt gyakran kerdezik

Az architectural/enterprise patterneknel ket dolgot emlitenek meg
Az egyik Martin Fowler: Patterns of Enterprise Application Architecture, ezek technologiafuggetlen patternek. 2003-as a konyv, ugyhogy lehet hogy egy reszuk mar elavult, ezt nem tudnam darabra megmondani, de az ismertebbek MVC, DTO, domain model stb. ma is relevansak, ezeket mindenkeppen erdemes megnezni. Fowler honlapjan fenn vannak roviditett formaban is. https://martinfowler.com/articles/enterprisePatterns.html
Leteznek tovabba Java specifikus enterprise patternek is. Meg a J2EE idejen, tobbek kozott az emlitett Fowler-konyv alapjan irtak egy konyvet, Dan Malks, Deepak Alur, John Crupi: Core J2EE Patterns: Best Practices and Design Strategies, roviditve itt http://www.corej2eepatterns.com/ de ezeknek a tulnyomo resze a JEE-vel elavult, ugyhogy egy masik szerzo kesobb attekintette es updatelte oket, amirol irt o is egy sajat konyvet, Adam Bien: Real World Java EE Patterns Rethinking Best Practices (ez nincs a safaribookson, de a minszki szerveren szerintem megtalalod). Ez olyan jol sikerult, hogy az altala kitalalt patternek egy reszet a hivatalos Oracle Java architect vizsgaanyagba is atvettek, megtalalod az elozo heti levelben mar emlitett Joseph Bambara, Paul Allen: OCM Java EE 6 Enterprise Architect Exam Guide konyv 7.fejezetenek masodik feleben ("Java EE Patterns"). A fejezet elso fele egyebkent a GOF patternekrol szol tomoritve, azt is erdemes lehet atolvasni. A vegen megemlit meg nehany antipatternt is, ami szinten elofordulhat vizsgatemakent, de az itt szereplok elegge enterprise-specifikusak, szerintem inkabb par ismertebb pelda legyen keszenletben (god object, golden hammer stb.)

ASMT-n szerintem a GOF es az ismertebb Fowler-fele enterprise patternek kerulhetnek elo, a Java EE patterneket szerintem a vizsgaztatok jo resze se nagyon hasznalta soha eleteben, de ha tudsz roluk az persze nem baj, erre a teruletre iranyulo kerdesnel meg lehet emliteni hogy hallottal roluk
